name: GitHub CI
on: [push]

jobs:
  linux32_build:
    name: Linux x86 Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:x86-latest-stable /bin/sh -c "apk add bash git && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        name: subconverter_linux32
        path: subconverter/

  linux64_build:
    name: Linux x86_64 Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: docker run -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:amd64-latest-stable /bin/sh -c "apk add bash git && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        name: subconverter_linux64
        path: subconverter/

  macos_build:
    name: macOS Build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: bash scripts/build.macos.release.sh
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        name: subconverter_darwin64
        path: subconverter/

  windows64_build:
    name: Windows x86_64 Build
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v2
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: base-devel git mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-libevent mingw-w64-x86_64-pcre2 python2 python2-pip
    - name: Build
      run: |
        git clone https://github.com/curl/curl --depth=1
        cd curl
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_USE_LIBSSH2=OFF -DHTTP_ONLY=ON -DCMAKE_USE_SCHANNEL=ON -DBUILD_SHARED_LIBS=OFF -DBUILD_CURL_EXE=OFF -DCMAKE_INSTALL_PREFIX=/mingw64 -G "Unix Makefiles" .
        make install -j4
        cd ..
        git clone https://github.com/jbeder/yaml-cpp --depth=1
        cd yaml-cpp
        cmake -DCMAKE_BUILD_TYPE=Release -DYAML_CPP_BUILD_TESTS=OFF -DYAML_CPP_BUILD_TOOLS=OFF -DCMAKE_INSTALL_PREFIX=/mingw64 -G "Unix Makefiles" .
        make install -j4
        cd ..
        git clone https://github.com/svaarala/duktape --depth=1
        cd duktape
        pip2 install PyYAML
        mkdir dist
        python2 util/dist.py
        cd dist/source/src
        gcc -c -O3 -o duktape.o duktape.c
        gcc -c -O3 -o duk_module_node.o -I. ../extras/module-node/duk_module_node.c
        ar cr libduktape.a duktape.o
        ar cr libduktape_module.a duk_module_node.o
        install -m0644 ./*.a /mingw64/lib
        install -m0644 ./duk*.h /mingw64/include
        install -m0644 ../extras/module-node/duk_module_node.h /mingw64/include
        cd ../../../..
        git clone https://github.com/Tencent/rapidjson --depth=1
        cd rapidjson
        cmake -DRAPIDJSON_BUILD_DOC=OFF -DRAPIDJSON_BUILD_EXAMPLES=OFF -DRAPIDJSON_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/mingw64 -G "Unix Makefiles" .
        make install -j4
        cd ..
        cmake -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" .
        make -j4
        rm subconverter.exe
        g++ $(find CMakeFiles/subconverter.dir/src -name "*.obj") curl/lib/libcurl.a -o base/subconverter.exe -static -levent -lpcre2-8 -lduktape -lduktape_module -lyaml-cpp -lcrypt32 -lws2_32 -lwsock32 -lz -s
        mv base subconverter
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        name: subconverter_win64
        path: subconverter/
